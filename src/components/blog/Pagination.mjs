// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Link$RescriptMonorepo from "./Link.mjs";
import * as Utils$RescriptMonorepo from "../../utils/Utils.mjs";
import * as Tailwind$RescriptMonorepo from "../../styles/tailwind/Tailwind.mjs";

var mainWrapper = Tailwind$RescriptMonorepo.twStyle([
      Tailwind$RescriptMonorepo.pt(6),
      Tailwind$RescriptMonorepo.pb(8),
      Tailwind$RescriptMonorepo.spaceY(2),
      Tailwind$RescriptMonorepo.md([Tailwind$RescriptMonorepo.spaceY(5)])
    ]);

var nav = Tailwind$RescriptMonorepo.twStyle([
      Tailwind$RescriptMonorepo.flex,
      Tailwind$RescriptMonorepo.justifyBetween
    ]);

var disabled = Tailwind$RescriptMonorepo.twStyle([
      Tailwind$RescriptMonorepo.cursorAuto,
      Tailwind$RescriptMonorepo.disabled([Tailwind$RescriptMonorepo.opacity(50)])
    ]);

var Styles = {
  mainWrapper: mainWrapper,
  nav: nav,
  disabled: disabled
};

function Pagination(Props) {
  var totalPages = Props.totalPages;
  var currentPage = Props.currentPage;
  var prevPage = (currentPage - 1 | 0) > 0;
  var nextPage = (currentPage + 1 | 0) <= totalPages;
  var renderPrev = prevPage ? React.createElement(Link$RescriptMonorepo.make, {
          children: React.createElement("button", {
                rel: "previous"
              }, Utils$RescriptMonorepo.str("Previous")),
          href: (currentPage - 1 | 0) === 1 ? "/blog/" : "/blog/page/" + String(currentPage - 1 | 0)
        }) : React.createElement("button", {
          className: disabled,
          disabled: !prevPage,
          rel: "previous"
        }, Utils$RescriptMonorepo.str("Previous"));
  var renderNext = nextPage ? React.createElement(Link$RescriptMonorepo.make, {
          children: React.createElement("button", {
                rel: "next"
              }, Utils$RescriptMonorepo.str("Next")),
          href: "/blog/page/" + String(currentPage + 1 | 0)
        }) : React.createElement("button", {
          className: disabled,
          disabled: !nextPage,
          rel: "next"
        }, Utils$RescriptMonorepo.str("Next"));
  return React.createElement("div", {
              className: mainWrapper
            }, React.createElement("nav", {
                  className: nav
                }, renderPrev, React.createElement("span", undefined, Utils$RescriptMonorepo.str(String(currentPage) + " of " + String(totalPages))), renderNext));
}

var make = Pagination;

export {
  Styles ,
  make ,
  
}
/* mainWrapper Not a pure module */
